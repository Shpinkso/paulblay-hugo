<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Metrics on Paul Blay</title><link>https://shpinkso.github.io/paulblay-hugo/previews/main/categories/metrics/</link><description>Recent content in Metrics on Paul Blay</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 13 Oct 2025 11:37:12 +0100</lastBuildDate><atom:link href="https://shpinkso.github.io/paulblay-hugo/previews/main/categories/metrics/index.xml" rel="self" type="application/rss+xml"/><item><title>Aligning Teams With Outcomes - A Product Application</title><link>https://shpinkso.github.io/paulblay-hugo/previews/main/blog/2025/10/13/applying_outcomes/</link><pubDate>Mon, 13 Oct 2025 11:37:12 +0100</pubDate><guid>https://shpinkso.github.io/paulblay-hugo/previews/main/blog/2025/10/13/applying_outcomes/</guid><description>From experience I know that great ideas are only as valuable as their applications in the real world.
I&amp;rsquo;ve used OKRs and Outcome framing for quite a while, so it&amp;rsquo;s about time to showcase a real world example - what it did for us and what we learned.
I&amp;rsquo;ll present this in the classic STAR format like I&amp;rsquo;m trying to answer an interview question&amp;hellip; because that&amp;rsquo;s what I&amp;rsquo;ve been spending time doing recently.</description></item><item><title>Complexity as a Software metric</title><link>https://shpinkso.github.io/paulblay-hugo/previews/main/blog/2020/07/20/complexity_as_sw_metric/</link><pubDate>Mon, 20 Jul 2020 11:46:20 +0100</pubDate><guid>https://shpinkso.github.io/paulblay-hugo/previews/main/blog/2020/07/20/complexity_as_sw_metric/</guid><description>I’ve never been completely sold on Cyclomatic Complexity as a metric, it maps to linearly independent paths through code which may be useful to get an indication on the level of testing an application needs, assuming code coverage is not available (another metric that needs to be treated with caution), but how much value is that? Most applications are multi threaded and do not run in a linear fashion, I’d argue that there’s considerably more value in measuring the readability of code in order to allow people to understand what it does and how to change it.</description></item></channel></rss>